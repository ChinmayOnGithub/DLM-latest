# events {}

# http {
#     # Define a custom log format
#     log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
#                     '$status $body_bytes_sent "$http_referer" '
#                     '"$http_user_agent" "$http_x_forwarded_for"';

#     # Specify where to store the logs
#     access_log /var/log/nginx/access.log custom;  # Access logs
#     error_log /var/log/nginx/error.log;  # Error logs

#     server {
#         listen 80;
#         server_name localhost;

#         location / {
#             root /usr/share/nginx/html;
#             index index.html index.htm;
#         }

#         # Optionally, you can add error handling for specific status codes
#         error_page 404 /404.html;  # Custom 404 error page
#         location = /404.html {
#             internal;
#         }
#     }
# }

events {}

http {
    # Define a custom log format for errors with HTTP status codes
    log_format custom_error '[time=$time_local] [status=$status] '
                            'client: $remote_addr, '
                            'server: $server_name, '
                            'request: "$request", '
                            'user_agent: "$http_user_agent"';

    # Default error log for critical issues
    error_log /var/log/nginx/error.log warn;

    # Custom error log to capture HTTP status codes
    access_log /var/log/nginx/custom_error.log custom_error;

    server {
        listen 80;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }

        # Simulate and log errors
        error_page 404 /404.html;
        error_page 500 /500.html;
        error_page 403 /403.html;

        location = /404.html {
            internal;
        }

        location = /500.html {
            internal;
        }

        location = /403.html {
            internal;
        }

        location /permission.html {
            deny all;
        }
    }
}
