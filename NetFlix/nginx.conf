events {}

http {
    # Define a custom log format
    log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                    '{$status} $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Specify where to store the logs
    access_log /var/log/nginx/access.log custom;  # Access logs
    error_log /var/log/nginx/error.log;  # Error logs

    server {
        listen 80;
        server_name localhost;

        # Simulate a 502 Bad Gateway by defining an unreachable upstream
        location /simulate-bad-gateway {
            proxy_pass http://127.0.0.1:9999; # Non-existent backend
        }

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }

        # Optionally, you can add error handling for specific status codes
        error_page 404 /404.html;  # Custom 404 error page
        location = /404.html {
            internal;
        }

        # Favicon (optional, suppress logs for it)
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location /simulate-400 {
        return 400 "Bad Request: Invalid Input";
        }
        error_page 400 /400.html;
        location = /400.html {
        root /usr/share/nginx/html;
        internal;
    }

    location /simulate-401 {
    auth_basic "Restricted Area";
    auth_basic_user_file /etc/nginx/.htpasswd;
}
error_page 401 /401.html;
location = /401.html {
    root /usr/share/nginx/html;
    internal;
}

# limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

# location /simulate-429 {
#     limit_req zone=one;
# }
# error_page 429 /429.html;
# location = /429.html {
#     root /usr/share/nginx/html;
#     internal;
# }


location /simulate-500 {
    return 500 "Internal Server Error: Something went wrong.";
}
error_page 500 /500.html;
location = /500.html {
    root /usr/share/nginx/html;
    internal;
}


location /simulate-504 {
    proxy_pass http://127.0.0.1:12345;  # Non-existent backend to trigger timeout
    proxy_read_timeout 1s;  # Force timeout
}
error_page 504 /504.html;
location = /504.html {
    root /usr/share/nginx/html;
    internal;
}


    }
}

